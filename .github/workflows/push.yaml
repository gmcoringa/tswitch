name: push
on: 
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

permissions:
  contents: write

env:
  GO_VERSION: 1.24

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: golangci/golangci-lint-action@v7
        env:
          CGO_ENABLED: 0
        with:
          version: v1.64

  test:
    name: Test on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go test -cover -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          CGO_ENABLED: 0

  test-macos:
    name: Test on MacOS
    runs-on: macos-latest
    continue-on-error: true # Don't let macos test fail whole workflow
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install MacOS Docker
        uses: docker-practice/actions-setup-docker@master
      - run: go test -v -timeout 1h -cover ./...
        env:
          CGO_ENABLED: 0

  snapshot:
    name: Snapshot
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --snapshot --clean
      - name: Capture Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: tswitch-linux
          path: dist/tswitch_linux_amd64/tswitch
      - name: Capture Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: tswitch-windows
          path: dist/tswitch_windows_amd64/tswitch.exe
      - name: Capture MacOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: tswitch-macos
          path: dist/tswitch_darwin_amd64/tswitch

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
